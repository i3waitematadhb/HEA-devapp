<?php

namespace {

    use SilverStripe\AssetAdmin\Forms\UploadField;
    use SilverStripe\Assets\Image;
    use SilverStripe\CMS\Model\SiteTree;
    use SilverStripe\Forms\CheckboxField;
    use SilverStripe\Forms\DropdownField;
    use SilverStripe\Forms\GridField\GridField;
    use SilverStripe\Forms\GridField\GridFieldConfig_RecordEditor;
    use Symbiote\GridFieldExtensions\GridFieldEditableColumns;
    use UndefinedOffset\SortableGridField\Forms\GridFieldSortableRows;

    class Page extends SiteTree
    {
        private static $db = [
            'PageTheme' => 'Enum(array("dark","light"))',
        ];

        private static $has_one = [
            'PageBanner' => Image::class
        ];

        private static $owns = [
            'PageBanner',
        ];

        private static $has_many = [
            'Sections' => Section::class
        ];

        public function getCMSFields()
        {
            $fields = parent::getCMSFields(); // TODO: Change the autogenerated stub
            $fields->removeByName(['Content']);
            $fields->addFieldToTab('Root.Main', UploadField::create('PageBanner')
                ->setFolderName('PageBanner'),'Metadata');
            $fields->addFieldToTab('Root.Main', DropdownField::create('PageTheme', 'Page theme',
                $this->dbObject('PageTheme')->enumValues()),'Metadata');

            $gridConfig = GridFieldConfig_RecordEditor::create(9999);
            if ($this->Sections()->Count()) {
                $gridConfig->addComponent(new GridFieldSortableRows('Sort'));
            }
            $gridConfig->addComponent(new GridFieldEditableColumns());
            $gridColumns = $gridConfig->getComponentByType(GridFieldEditableColumns::class);
            $gridColumns->setDisplayFields([
                'Archived' => [
                    'title' => 'Archive',
                    'callback' => function($record, $column, $grid) {
                        return CheckboxField::create($column);
                    }
                ]
            ]);

            $gridField = GridField::create(
                'Sections',
                'Sections',
                $this->Sections(),
                $gridConfig
            );

            $fields->addFieldToTab('Root.Main', $gridField, 'Metadata');

            return $fields;
        }

        public function getVisibleSections()
        {
            return $this->Sections()->filter('Archived', false)->sort('Sort');
        }
    }
}
