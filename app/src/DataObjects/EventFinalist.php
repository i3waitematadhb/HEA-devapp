<?php

namespace {

    use Sheadawson\DependentDropdown\Forms\DependentDropdownField;
    use Sheadawson\DependentDropdown\Forms\DependentListboxField;
    use SilverStripe\AssetAdmin\Forms\UploadField;
    use SilverStripe\Assets\Image;
    use SilverStripe\Forms\CheckboxField;
    use SilverStripe\Forms\DropdownField;
    use SilverStripe\Forms\HiddenField;
    use SilverStripe\Forms\HTMLEditor\HTMLEditorField;
    use SilverStripe\Forms\TextField;
    use SilverStripe\ORM\DataObject;

    class EventFinalist extends DataObject
    {
        private static $default_sort = 'Sort';

        private static $singular_name = 'Event Finalist';
        private static $plural_name = "Event Finalists";

        private static $db = [
            'Name'      => 'Text',
            'Content'   => 'HTMLText',
            'Archived'  => 'Boolean',
            'Sort'      => 'Int'
        ];

        private static $has_one = [
            'Image'         => Image::class,
            'EventYear'     => EventYear::class,
            'EventCategory' => CategoryHistory::class
        ];

        private static $owns = [
            'Image'
        ];

        private static $summary_fields = [
            'Name',
            'ReadableEventYear'     => 'Year',
            'ReadableEventCategory' => 'Category',
            'Status'
        ];

        public function getCMSFields()
        {
            $fields = parent::getCMSFields(); // TODO: Change the autogenerated stub
            $fields->addFieldToTab('Root.Main', TextField::create('Name'));
            $fields->addFieldToTab('Root.Main', $eventYear = DropdownField::create('EventYearID', 'Event year',
                EventYear::get()->filter('Archived', false)->map('ID','Name')));

            $categorySource = function($val) {
                $eventYear = EventYear::get()->byID($val);
                return CategoryHistory::get()->filter(['Archived' => false, "EventYear" => $eventYear->Name])->map('ID','Name');
            };

            $fields->addFieldToTab('Root.Main', DependentDropdownField::create('EventCategoryID', 'Event category',
                $categorySource)->setDepends($eventYear));

            $fields->addFieldToTab('Root.Main', UploadField::create('Image')
                ->setFolderName('Finalists/'.$this->EventYear()->Name.'/'.$this->EventCategory()->Name));
            $fields->addFieldToTab('Root.Main', HTMLEditorField::create('Content'));
            $fields->addFieldToTab('Root.Main', CheckboxField::create('Archived'));
            $fields->addFieldToTab('Root.Main', HiddenField::create('Sort'));

            return $fields;
        }

        public function getStatus()
        {
            if($this->Archived == 1) return _t('GridField.Archived', 'Archived');
            return _t('GridField.Live', 'Live');
        }

        public function getReadableEventYear()
        {
            return $this->EventYear()->Name;
        }

        public function getReadableEventCategory()
        {
            return $this->EventCategory()->Name;
        }
    }
}
